//
// File generated by rootcint at Mon Feb 26 15:29:47 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME hparticleDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "hparticleDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void THParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THParticle(void *p = 0);
   static void *newArray_THParticle(Long_t size, void *p);
   static void delete_THParticle(void *p);
   static void deleteArray_THParticle(void *p);
   static void destruct_THParticle(void *p);
   static void streamer_THParticle(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THParticle*)
   {
      ::THParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THParticle", ::THParticle::Class_Version(), "./THParticle.hpp", 21,
                  typeid(::THParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THParticle::Dictionary, isa_proxy, 0,
                  sizeof(::THParticle) );
      instance.SetNew(&new_THParticle);
      instance.SetNewArray(&newArray_THParticle);
      instance.SetDelete(&delete_THParticle);
      instance.SetDeleteArray(&deleteArray_THParticle);
      instance.SetDestructor(&destruct_THParticle);
      instance.SetStreamerFunc(&streamer_THParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THParticle*)
   {
      return GenerateInitInstanceLocal((::THParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr THParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THParticle::Class_Name()
{
   return "THParticle";
}

//______________________________________________________________________________
const char *THParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THParticle*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void THParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class THParticle.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TParticle::Streamer(R__b);
      R__b >> fIndex;
      R__b >> fstatus;
      R__b >> fpdgCode;
      R__b >> fVx;
      R__b >> fVy;
      R__b >> fVz;
      R__b.CheckByteCount(R__s, R__c, THParticle::IsA());
   } else {
      R__c = R__b.WriteVersion(THParticle::IsA(), kTRUE);
      TParticle::Streamer(R__b);
      R__b << fIndex;
      R__b << fstatus;
      R__b << fpdgCode;
      R__b << fVx;
      R__b << fVy;
      R__b << fVz;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void THParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THParticle.
      TClass *R__cl = ::THParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fstatus", &fstatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpdgCode", &fpdgCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVx", &fVx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVy", &fVy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVz", &fVz);
      TParticle::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THParticle(void *p) {
      return  p ? new(p) ::THParticle : new ::THParticle;
   }
   static void *newArray_THParticle(Long_t nElements, void *p) {
      return p ? new(p) ::THParticle[nElements] : new ::THParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_THParticle(void *p) {
      delete ((::THParticle*)p);
   }
   static void deleteArray_THParticle(void *p) {
      delete [] ((::THParticle*)p);
   }
   static void destruct_THParticle(void *p) {
      typedef ::THParticle current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_THParticle(TBuffer &buf, void *obj) {
      ((::THParticle*)obj)->::THParticle::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::THParticle

/********************************************************
* hparticleDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablehparticleDict();

extern "C" void G__set_cpp_environmenthparticleDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("THParticle.hpp");
  G__cpp_reset_tagtablehparticleDict();
}
#include <new>
extern "C" int G__cpp_dllrevhparticleDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* THParticle */
static int G__hparticleDict_231_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THParticle[n];
     } else {
       p = new((void*) gvp) THParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THParticle;
     } else {
       p = new((void*) gvp) THParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__hparticleDictLN_THParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THParticle(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TLorentzVector*) libp->para[3].ref
, *(TLorentzVector*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) THParticle(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TLorentzVector*) libp->para[3].ref
, *(TLorentzVector*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__hparticleDictLN_THParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THParticle(*(THParticle*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) THParticle(*(THParticle*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__hparticleDictLN_THParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THParticle*) G__getstructoffset())->GetPdgCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THParticle*) G__getstructoffset())->GetIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THParticle*) G__getstructoffset())->Vx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THParticle*) G__getstructoffset())->Vy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THParticle*) G__getstructoffset())->Vz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THParticle*) G__getstructoffset())->SetIndex((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__hparticleDict_231_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THParticle G__TTHParticle;
static int G__hparticleDict_231_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THParticle*) (soff+(sizeof(THParticle)*i)))->~G__TTHParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THParticle*) (soff))->~G__TTHParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__hparticleDict_231_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THParticle* dest = (THParticle*) G__getstructoffset();
   *dest = *(THParticle*) libp->para[0].ref;
   const THParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* THParticle */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunchparticleDict {
 public:
  G__Sizep2memfunchparticleDict(): p(&G__Sizep2memfunchparticleDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunchparticleDict::*p)();
};

size_t G__get_sizep2memfunchparticleDict()
{
  G__Sizep2memfunchparticleDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancehparticleDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__hparticleDictLN_THParticle))) {
     THParticle *G__Lderived;
     G__Lderived=(THParticle*)0x1000;
     {
       TParticle *G__Lpbase=(TParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__hparticleDictLN_THParticle),G__get_linked_tagnum(&G__hparticleDictLN_TParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__hparticleDictLN_THParticle),G__get_linked_tagnum(&G__hparticleDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__hparticleDictLN_THParticle),G__get_linked_tagnum(&G__hparticleDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__hparticleDictLN_THParticle),G__get_linked_tagnum(&G__hparticleDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablehparticleDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__hparticleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__hparticleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__hparticleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__hparticleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__hparticleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__hparticleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__hparticleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__hparticleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__hparticleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__hparticleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__hparticleDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* THParticle */
static void G__setup_memvarTHParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__hparticleDictLN_THParticle));
   { THParticle *p; p=(THParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fstatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fpdgCode=",0,"PDG code of the particle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fVz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__hparticleDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarhparticleDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTHParticle(void) {
   /* THParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__hparticleDictLN_THParticle));
   G__memfunc_setup("THParticle",976,G__hparticleDict_231_0_1, 105, G__get_linked_tagnum(&G__hparticleDictLN_THParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THParticle",976,G__hparticleDict_231_0_2, 105, G__get_linked_tagnum(&G__hparticleDictLN_THParticle), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - pdg i - 'Int_t' 0 - status "
"d - 'Double_t' 0 - index u 'TLorentzVector' - 11 - p "
"u 'TLorentzVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THParticle",976,G__hparticleDict_231_0_3, 105, G__get_linked_tagnum(&G__hparticleDictLN_THParticle), -1, 0, 1, 1, 1, 0, "u 'THParticle' - 11 - point", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdgCode",950,G__hparticleDict_231_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,G__hparticleDict_231_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vx",206,G__hparticleDict_231_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vy",207,G__hparticleDict_231_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Vz",208,G__hparticleDict_231_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIndex",804,G__hparticleDict_231_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__hparticleDict_231_0_11, 85, G__get_linked_tagnum(&G__hparticleDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__hparticleDict_231_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__hparticleDict_231_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__hparticleDict_231_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__hparticleDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__hparticleDict_231_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__hparticleDict_231_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__hparticleDict_231_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__hparticleDict_231_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__hparticleDict_231_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THParticle::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THParticle", 1102, G__hparticleDict_231_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__hparticleDict_231_0_24, (int) ('u'), G__get_linked_tagnum(&G__hparticleDictLN_THParticle), -1, 1, 1, 1, 1, 0, "u 'THParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunchparticleDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalhparticleDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funchparticleDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__hparticleDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__hparticleDictLN_THParticle = { "THParticle" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablehparticleDict() {
  G__hparticleDictLN_TClass.tagnum = -1 ;
  G__hparticleDictLN_TBuffer.tagnum = -1 ;
  G__hparticleDictLN_TMemberInspector.tagnum = -1 ;
  G__hparticleDictLN_TObject.tagnum = -1 ;
  G__hparticleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__hparticleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__hparticleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__hparticleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__hparticleDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__hparticleDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__hparticleDictLN_TLorentzVector.tagnum = -1 ;
  G__hparticleDictLN_TAttLine.tagnum = -1 ;
  G__hparticleDictLN_TAtt3D.tagnum = -1 ;
  G__hparticleDictLN_TParticle.tagnum = -1 ;
  G__hparticleDictLN_THParticle.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablehparticleDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TAtt3D);
   G__get_linked_tagnum_fwd(&G__hparticleDictLN_TParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__hparticleDictLN_THParticle),sizeof(THParticle),-1,63232,(char*)NULL,G__setup_memvarTHParticle,G__setup_memfuncTHParticle);
}
extern "C" void G__cpp_setuphparticleDict(void) {
  G__check_setup_version(30051515,"G__cpp_setuphparticleDict()");
  G__set_cpp_environmenthparticleDict();
  G__cpp_setup_tagtablehparticleDict();

  G__cpp_setup_inheritancehparticleDict();

  G__cpp_setup_typetablehparticleDict();

  G__cpp_setup_memvarhparticleDict();

  G__cpp_setup_memfunchparticleDict();
  G__cpp_setup_globalhparticleDict();
  G__cpp_setup_funchparticleDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunchparticleDict();
  return;
}
class G__cpp_setup_inithparticleDict {
  public:
    G__cpp_setup_inithparticleDict() { G__add_setup_func("hparticleDict",(G__incsetup)(&G__cpp_setuphparticleDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_inithparticleDict() { G__remove_setup_func("hparticleDict"); }
};
G__cpp_setup_inithparticleDict G__cpp_setup_initializerhparticleDict;

